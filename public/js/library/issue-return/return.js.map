{"version":3,"file":"js/library/issue-return/return.js","sources":["webpack:///resources/js/views/library/issue-return/list.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{title}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"book_logs.total\">{{trans('general.total_result_found',{count : book_logs.total, from: book_logs.from, to: book_logs.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'library-issue-return'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('library.issue_to')}}</label>\r\n                                    <select v-model=\"filter.issue_to\" class=\"custom-select col-12\">\r\n                                      <option value=null selected>{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"option in issue_to\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('library.return_status')}}</label>\r\n                                    <select v-model=\"filter.return_status\" class=\"custom-select col-12\">\r\n                                      <option value=null selected>{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"option in return_statuses\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-5\">\r\n                                <div class=\"form-group\">\r\n                                    <date-range-picker :start-date.sync=\"filter.date_of_issue_start_date\" :end-date.sync=\"filter.date_of_issue_end_date\" :label=\"trans('library.date_of_issue_between')\"></date-range-picker>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-5\">\r\n                                <div class=\"form-group\">\r\n                                    <date-range-picker :start-date.sync=\"filter.due_date_start\" :end-date.sync=\"filter.due_date_end\" :label=\"trans('library.due_date_between')\"></date-range-picker>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getBookLogs\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"book_logs.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('library.date_of_issue')}}</th>\r\n                                    <th>{{trans('library.due_date')}}</th>\r\n                                    <th>{{trans('library.issue_to')}}</th>\r\n                                    <th></th>\r\n                                    <th>{{trans('library.no_of_books_issued')}}</th>\r\n                                    <th>{{trans('library.no_of_books_returned')}}</th>\r\n                                    <th>{{trans('library.issue_remarks')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"book_log in book_logs.data\">\r\n                                    <td>{{book_log.date_of_issue | moment}}</td>\r\n                                    <td>\r\n                                        <span v-if=\"book_log.due_date\">\r\n                                            {{book_log.due_date | moment}}\r\n                                            <template v-if=\"isOverDue(book_log)\">\r\n                                                <br />\r\n                                                <span class=\"label label-danger\">{{trans('library.overdue_by_days', {day: overdueDay(book_log)})}}</span>\r\n                                            </template>\r\n                                        </span>\r\n                                        </span>\r\n                                        <span v-else>-</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span v-if=\"book_log.student_record_id\">{{trans('student.student')}}</span>\r\n                                        <span v-if=\"book_log.employee_id\">{{trans('employee.employee')}}</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <template v-if=\"book_log.student_record_id\">\r\n                                            <span>{{trans('student.name')+': '+getStudentName(book_log.student_record.student)}}</span> <br />\r\n                                            <span>{{trans('academic.batch')+': '+getStudentBatch(book_log.student_record.batch)}}</span><br />\r\n                                            <span>{{trans('student.father_name')+': '+book_log.student_record.student.parent.father_name}}</span>\r\n                                        </template>\r\n                                        <template v-if=\"book_log.employee_id\">\r\n                                            <span>{{trans('employee.name')+': '+getEmployeeName(book_log.employee)}}</span> <br />\r\n                                            <span>{{trans('employee.father_name')+': '+book_log.employee.father_name}}</span><br />\r\n                                            <span>{{trans('employee.contact_number')+': '+book_log.employee.contact_number}}</span>\r\n                                        </template>\r\n                                    </td>\r\n                                    <td v-text=\"book_log.book_issue_count\"></td>\r\n                                    <td v-text=\"book_log.book_return_count\"></td>\r\n                                    <td v-text=\"book_log.issue_remarks\"></td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button class=\"btn btn-info btn-sm\" v-tooltip=\"trans('general.view_detail')\" @click=\"$router.push('/library/issue/'+book_log.uuid)\">\r\n                                                <i class=\"fas fa-arrow-circle-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!book_logs.total\" module=\"library\" title=\"issue_module_title\" description=\"issue_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"book_logs\" @updateRecords=\"getBookLogs\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import vSelect from 'vue-multiselect'\r\n\r\n    export default {\r\n        components : { vSelect },\r\n        props: ['title','returnStatus'],\r\n        data() {\r\n            return {\r\n                book_logs: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'date_of_issue',\r\n                    order: 'desc',\r\n                    date_of_issue_start_date: '',\r\n                    date_of_issue_end_date: '',\r\n                    due_date_start: '',\r\n                    due_date_end: '',\r\n                    issue_to: '',\r\n                    return_status: '',\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'date_of_issue',\r\n                        translation: i18n.library.book_title\r\n                    }\r\n                ],\r\n                showFilterPanel: false,\r\n                help_topic: '',\r\n                issue_to: [\r\n                    {\r\n                        text: i18n.student.student,\r\n                        value: 'student'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.employee,\r\n                        value: 'employee'\r\n                    }\r\n                ],\r\n                return_statuses: [\r\n                    {\r\n                        text: i18n.library.return_complete,\r\n                        value: 'complete'\r\n                    },\r\n                    {\r\n                        text: i18n.library.return_due,\r\n                        value: 'due'\r\n                    },\r\n                    {\r\n                        text: i18n.library.return_overdue,\r\n                        value: 'overdue'\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('issue-book') && !helper.hasPermission('return-book')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.filter.return_status = this.returnStatus;\r\n            this.getBookLogs();\r\n            helper.showDemoNotification(['library']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeNameWithCode(employee);\r\n            },\r\n            getStudentBatch(batch){\r\n                return batch.course.name+' '+batch.name;\r\n            },\r\n            getBookLogs(page){\r\n                let loader = this.$loading.show();\r\n\r\n                this.filter.date_of_issue_start_date = helper.toDate(this.filter.date_of_issue_start_date);\r\n                this.filter.date_of_issue_end_date = helper.toDate(this.filter.date_of_issue_end_date);\r\n                this.filter.due_date_start = helper.toDate(this.filter.due_date_start);\r\n                this.filter.due_date_end = helper.toDate(this.filter.due_date_end);\r\n\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/book/log?page=' + page + url)\r\n                    .then(response => {\r\n                        this.book_logs = response.book_logs;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config)\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/book/log/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/book/log/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            isOverDue(book_log){\r\n                if(book_log.book_issue_count > book_log.book_return_count && moment(book_log.due_date).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD'))\r\n                    return true;\r\n\r\n                return false;\r\n            },\r\n            overdueDay(book_log){\r\n                let date = moment().format('YYYY-MM-DD');\r\n\r\n                if(this.isOverDue(book_log))\r\n                    return helper.getDateDiff(book_log.due_date, date);\r\n\r\n                return 0;\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getBookLogs();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getBookLogs();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getBookLogs();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// resources/js/views/library/issue-return/list.vue"],"mappings":"AAkJA","sourceRoot":""}